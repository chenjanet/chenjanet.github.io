{"version":3,"sources":["images/pic.jpg","components/about.js","images/cliordledemo.gif","images/feliciabotdemo.gif","images/markdemo.gif","images/stronglanguagedemo.gif","data/projects.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","id","src","pic","style","href","title","icon","library","add","faAngleLeft","faAngleRight","faEnvelope","faFileAlt","fab","App","currentDate","Date","useState","getHours","time","setTime","setTimeType","setInterval","newDate","useEffect","document","getElementById","classList","remove","onTabClick","tabName","tabs","getElementsByClassName","tab","contentId","substring","length","setSelectedTab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4PAAe,MAA0B,gC,OC0C1BA,EApCD,WACV,OACI,qBAAKC,UAAU,SAASC,GAAG,cAA3B,SAEI,sBAAKD,UAAU,mBAAmBC,GAAG,eAArC,UACI,qBAAKA,GAAG,WAAWC,IAAKC,EAAKC,MAAO,KACpC,sBAAKH,GAAG,YAAR,UACI,oBAAIA,GAAG,UAAP,iCACA,4MAEA,wNAGA,0OAGA,4GAGA,sBAAKA,GAAG,QAAR,UACI,mBAAGI,KAAK,iCAAiCC,MAAM,QAA/C,SACI,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,gBAEnC,mBAAGF,KAAK,8BAA8BC,MAAM,SAA5C,SACI,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,cAEnC,mBAAGF,KAAK,oCAAoCC,MAAM,WAAlD,SACI,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,4BCjC5C,MAA0B,yCCA1B,MAA0B,2CCA1B,MAA0B,qCCA1B,MAA0B,+CCQ7B,WAYA,WAYA,WAYA,WChCZC,IAAQC,IAAIC,IAAaC,IAAcC,IAAYC,IAAWC,KAE9D,IAqDeC,EArDH,WACR,IAAMC,EAAc,IAAIC,KACxB,EAAwBC,mBAASF,EAAYG,YAA7C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCH,qBAAhC,mBAAiBI,GAAjB,WAEiBC,aAAY,WACzB,IAAIC,EAAU,IAAIP,KAClBI,EAAQG,EAAQL,cACjB,KAEHM,qBAAU,WACD,GAAKL,GAAQA,GAAQ,GAAMA,GAAQ,IACpCM,SAASC,eAAe,QAAQC,UAAUC,OAAO,WACjDH,SAASC,eAAe,QAAQC,UAAUnB,IAAI,SAC9Ca,EAAY,UACL,GAAKF,GAAQA,GAAQ,IAC5BM,SAASC,eAAe,QAAQC,UAAUC,OAAO,SACjDH,SAASC,eAAe,QAAQC,UAAUnB,IAAI,WAC9Ca,EAAY,YACL,IAAMF,GAAQA,GAAQ,IAC7BM,SAASC,eAAe,QAAQC,UAAUC,OAAO,WACjDH,SAASC,eAAe,QAAQC,UAAUnB,IAAI,WAC9Ca,EAAY,YACL,IAAMF,GAAQA,GAAQ,KAC7BM,SAASC,eAAe,QAAQC,UAAUC,OAAO,WACjDH,SAASC,eAAe,QAAQC,UAAUnB,IAAI,WAC9Ca,EAAY,eAepB,OACI,mCACI,qBAAKtB,UAAU,gBAAf,SAEQ,cAAC,EAAD,CAAO8B,WAAY,kBAfZ,SAACC,GACpB,IADgC,EAC1BC,EAAON,SAASO,uBAAuB,OADb,cAEdD,GAFc,IAEhC,2BAAwB,CAAC,IAAdE,EAAa,QACdC,EAAYD,EAAIjC,GAAGmC,UAAU,EAAGF,EAAIjC,GAAGoC,OAAS,GACtDH,EAAIN,UAAUC,OAAO,YACrBH,SAASC,eAAT,UAA2BQ,EAA3B,YAA+CP,UAAUC,OAAO,aALpC,8BAOhCH,SAASC,eAAT,UAA2BI,EAA3B,QAAyCH,UAAUnB,IAAI,YACvDiB,SAASC,eAAT,UAA2BI,EAA3B,YAA6CH,UAAUnB,IAAI,YAOtB6B,CAAe,iBC/C7CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,K","file":"static/js/main.6f69059e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pic.d9dd01c8.jpg\";","import React from 'react';\nimport pic from '../images/pic.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport '../App.css';\n\nconst About = () => {\n    return (\n        <div className='folder' id='aboutFolder'>\n            {/*<div className='mobileTab'>about</div>*/}\n            <div className='content selected' id='aboutContent'>\n                <img id='portrait' src={pic} style={{}}></img>\n                <div id='aboutText'>\n                    <h3 id='heading'>Hi! I'm Janet Chen.</h3>\n                    <p>\n                        I'm a software engineering student at the University of Waterloo. I'm currently interning at Amazon Web Services in Vancouver, building payment programs for AWS customers.</p>\n                    <p>\n                        In the past, I've developed data analytics internal tooling for Zynga, a core microservice for BitGo, a bank teller UI at NCR, and data visualization dashboards for Counting Opinions.\n                    </p>\n                    <p>    \n                        In my free time, I enjoy reading, playing the piano, and tinkering with my mechanical keyboard. Feel free to send me book recommendations - I'm always looking to add to my ever-growing to-be-read list!\n                    </p>\n                    <p>\n                        Let's connect! Click on the icons below for my email, GitHub, and LinkedIn.\n                    </p>\n                    <div id='icons'>\n                        <a href='mailto:janet.chen@uwaterloo.ca' title='Email'>\n                            <FontAwesomeIcon icon={['fas', 'envelope']} />\n                        </a>\n                        <a href='https://github.com/j985chen' title='GitHub'>\n                            <FontAwesomeIcon icon={['fab', 'github']} />\n                        </a>\n                        <a href='https://linkedin.com/in/j985chen/' title='LinkedIn'>\n                            <FontAwesomeIcon icon={['fab', 'linkedin']} />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/cliordledemo.7e621545.gif\";","export default __webpack_public_path__ + \"static/media/feliciabotdemo.38e2e40b.gif\";","export default __webpack_public_path__ + \"static/media/markdemo.0ec11468.gif\";","export default __webpack_public_path__ + \"static/media/stronglanguagedemo.56864b1b.gif\";","import cliordledemo from '../images/cliordledemo.gif';\nimport feliciabotdemo from '../images/feliciabotdemo.gif';\nimport markdemo from '../images/markdemo.gif';\nimport stronglanguagedemo from '../images/stronglanguagedemo.gif';\n\nconst projects = [\n    {\n        description: (\n            <>\n                <h3>Cli-ordle</h3>\n                <p>A command-line interface version of everyone's favourite 5-letter-word-guessing game</p>\n                <p><em>Technologies used: Golang, BoltDB</em></p>\n            </>\n        ),\n        image: (\n           <img className='projectDemo' src={cliordledemo} alt='Project Demo' /> \n        )\n    },\n    {\n        description: (\n            <>\n                <h3>Strong Language Detector</h3>\n                <p>A Google Chrome extension which leverages an API based on an NLP model to censor strong language on webpages</p>\n                <p><em>Technologies used: pandas, scikit-learn, Flask, JavaScript</em></p>\n            </>\n        ),\n        image: (\n            <img className='projectDemo' src={stronglanguagedemo} alt='Project Demo' />\n        ),\n    },\n    {\n        description: (\n            <>\n                <h3>Mark the Grade Tracker</h3>\n                <p>A minimalist grade-tracking application inspired by Notion</p>\n                <p><em>Technologies used: MongoDB, Mongoose, Node.js, Express.js, React</em></p>\n            </>\n        ),\n        image: (\n            <img className='projectDemo' src={markdemo} alt='Project Demo' />\n        ),\n    },\n    {\n        description: (\n            <>\n                <h3>FeliciaBot</h3>\n                <p>A Discord bot study buddy/assistant that handles translations, Wikipedia searches, dictionary/thesaurus lookups, and to-do lists</p>\n                <p><em>Technologies used: MongoDB, Discord.js, Node.js</em></p>\n            </>\n        ),\n        image: (\n            <img className='projectDemo' src={feliciabotdemo} alt='Project Demo' />\n        ),\n    },\n];\n\nexport default projects;\n","import React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faAngleLeft, faAngleRight, faEnvelope, faFileAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './App.css';\n\nimport Tabs from './components/tabs';\nimport About from './components/about';\nimport Projects from './components/projects';\n// import Photos from './components/photos';\n\nlibrary.add(faAngleLeft, faAngleRight, faEnvelope, faFileAlt, fab);\n\nconst App = () => {\n    const currentDate = new Date();\n    const [time, setTime] = useState(currentDate.getHours());\n    const [timeType, setTimeType] = useState();\n\n    const interval = setInterval(() => {\n        let newDate = new Date();\n        setTime(newDate.getHours());\n    }, 60000);\n\n    useEffect(() => {\n        if ((0 <= time && time <= 4) || time >= 21) {\n            document.getElementById('root').classList.remove('evening');\n            document.getElementById('root').classList.add('night');\n            setTimeType('night');\n        } else if (5 <= time && time <= 10) {\n            document.getElementById('root').classList.remove('night');\n            document.getElementById('root').classList.add('morning');\n            setTimeType('morning');\n        } else if (11 <= time && time <= 17) {\n            document.getElementById('root').classList.remove('morning');\n            document.getElementById('root').classList.add('daytime');\n            setTimeType('daytime');\n        } else if (18 <= time && time <= 20) {\n            document.getElementById('root').classList.remove('daytime');\n            document.getElementById('root').classList.add('evening');\n            setTimeType('evening');\n        }\n    });\n\n    const setSelectedTab = (tabName) => {\n        const tabs = document.getElementsByClassName('tab');\n        for (const tab of tabs) {\n            const contentId = tab.id.substring(0, tab.id.length - 3);\n            tab.classList.remove('selected');\n            document.getElementById(`${contentId}Content`).classList.remove('selected');\n        }\n        document.getElementById(`${tabName}Tab`).classList.add('selected');\n        document.getElementById(`${tabName}Content`).classList.add('selected');\n    };\n\n    return (\n        <>\n            <div className='filingCabinet'>\n                {/*<Tabs onChangeTab={setSelectedTab}/>*/}\n                    <About onTabClick={() => setSelectedTab('about')}/>\n                    {/*<Projects onTabClick={() => setSelectedTab('projects')}/>\n                    <Photos onTabClick={() => setSelectedTab('photos')}/>*/}\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}